{"ast":null,"code":"import axios from 'axios';\nimport { API_URL, JPA_API_URL } from '../../Constants'; // API to facilitate sending HTTP requests to the backend via the Axios dependency\n// Uses JPA_API_URL to use JPA database instead of the hardcoded service.\n\nclass TodoDataService {\n  retrieveAllTodos(name) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos`);\n  }\n\n  retrieveTodo(name, id) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  deleteTodo(name, id) {\n    return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  updateTodo(name, id, todo) {\n    return axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo);\n  }\n\n  createTodo(name, todo) {\n    return axios.post(`${JPA_API_URL}/users/${name}/todos`);\n  }\n\n}\n\nexport default new TodoDataService();","map":{"version":3,"sources":["/Users/anrev/Desktop/Tech/Projects/in28Minutes - Fullstack with React and Spring/Todo Application/frontend/todo-app/src/api/todo/TodoDataService.js"],"names":["axios","API_URL","JPA_API_URL","TodoDataService","retrieveAllTodos","name","get","retrieveTodo","id","deleteTodo","delete","updateTodo","todo","put","createTodo","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC,C,CAEA;AACA;;AAEA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,WAAOL,KAAK,CAACM,GAAN,CAAW,GAAEJ,WAAY,UAASG,IAAK,QAAvC,CAAP;AACH;;AAEDE,EAAAA,YAAY,CAACF,IAAD,EAAOG,EAAP,EAAW;AACnB,WAAOR,KAAK,CAACM,GAAN,CAAW,GAAEJ,WAAY,UAASG,IAAK,UAASG,EAAG,EAAnD,CAAP;AACH;;AAEDC,EAAAA,UAAU,CAACJ,IAAD,EAAOG,EAAP,EAAW;AACjB,WAAOR,KAAK,CAACU,MAAN,CAAc,GAAER,WAAY,UAASG,IAAK,UAASG,EAAG,EAAtD,CAAP;AACH;;AAEDG,EAAAA,UAAU,CAACN,IAAD,EAAOG,EAAP,EAAWI,IAAX,EAAiB;AACvB,WAAOZ,KAAK,CAACa,GAAN,CAAW,GAAEX,WAAY,UAASG,IAAK,UAASG,EAAG,EAAnD,EAAsDI,IAAtD,CAAP;AACH;;AAGDE,EAAAA,UAAU,CAACT,IAAD,EAAOO,IAAP,EAAa;AACnB,WAAOZ,KAAK,CAACe,IAAN,CAAY,GAAEb,WAAY,UAASG,IAAK,QAAxC,CAAP;AACH;;AApBiB;;AAwBtB,eAAe,IAAIF,eAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport { API_URL, JPA_API_URL } from '../../Constants';\n\n// API to facilitate sending HTTP requests to the backend via the Axios dependency\n// Uses JPA_API_URL to use JPA database instead of the hardcoded service.\n\nclass TodoDataService {\n    retrieveAllTodos(name) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos`);\n    }\n\n    retrieveTodo(name, id) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`);\n    }\n\n    deleteTodo(name, id) {\n        return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`);\n    }\n\n    updateTodo(name, id, todo) {\n        return axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo);\n    }\n\n\n    createTodo(name, todo) {\n        return axios.post(`${JPA_API_URL}/users/${name}/todos`);\n    }\n\n}\n\nexport default new TodoDataService()"]},"metadata":{},"sourceType":"module"}