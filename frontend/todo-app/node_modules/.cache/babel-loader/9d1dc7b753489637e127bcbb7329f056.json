{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/counter/Counter.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css'; // Counter class (contains CounterButton)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(); // Call super before this. No implicit super call in JS.\n\n    this.state = {\n      counter: 0\n    }; // bind increment function to the object\n\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 1,\n        incrementMethod: this.increment,\n        decrementMethod: this.decrement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 5,\n        incrementMethod: this.increment,\n        decrementMethod: this.decrement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CounterButton, {\n        by: 10,\n        incrementMethod: this.increment,\n        decrementMethod: this.decrement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"count\",\n        children: this.state.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset\",\n          onClick: this.reset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  } // reset button\n\n\n  reset() {\n    console.log(\"reset\");\n    this.setState(() => {\n      return {\n        counter: 0\n      };\n    });\n  } // Function increment (by from child)\n  // increment = () => {  using arrow function removes need to do binding. But we will stick to using binding for now\n\n\n  increment(by) {\n    console.log(`increment from parent - ${by}`); // template literal - embedded expressions inside string literal\n\n    this.setState(prevState => {\n      // referencing previous state\n      return {\n        counter: prevState.counter + by\n      }; // incrementing it, and returning\n    });\n  } // Function decrement (by from child)\n\n\n  decrement(by) {\n    console.log(`decrement from parent - ${by}`); // template literal - embedded expressions inside string literal\n\n    this.setState(prevState => {\n      // referencing previous state\n      return {\n        counter: prevState.counter - by\n      }; // decrementing it, and returning\n    });\n  }\n\n} // Defining CounterButton, child of Counter\n\n\nclass CounterButton extends Component {\n  constructor() {\n    super(); // Call super before this. No implicit super call in JS.\n    // // bind increment/decrement function to the object\n    // this.increment = this.increment.bind(this);\n    // this.decrement = this.decrement.bind(this);\n  } // Render button with digit of increment and c\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.incrementMethod(this.props.by),\n        children: [\"+\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.decrementMethod(this.props.by),\n        children: [\"-\", this.props.by]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  } // // Update state => Counter ++\n  // increment() {\n  //     // Call parent method with by.\n  //     this.props.incrementMethod(this.props.by);\n  // }\n  // // Update state => Counter --\n  // decrement() {\n  //     // Call parent method with by.\n  //     this.props.decrementMethod(this.props.by);\n  // }\n\n\n}\n\nCounterButton.defaultProps = {\n  // default value for properties\n  by: 1\n};\nCounterButton.propTypes = {\n  // type constraints - to throw error\n  by: PropTypes.number\n}; // export entire class out\n\nexport default Counter;","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/counter/Counter.jsx"],"names":["React","Component","PropTypes","Counter","constructor","state","counter","increment","bind","decrement","reset","render","console","log","setState","by","prevState","CounterButton","props","incrementMethod","decrementMethod","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Counter.css'\n\n// Counter class (contains CounterButton)\nclass Counter extends Component {\n\n    constructor() {\n        super(); // Call super before this. No implicit super call in JS.\n        this.state = {\n            counter: 0\n        }\n        // bind increment function to the object\n        this.increment = this.increment.bind(this);\n        this.decrement = this.decrement.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <CounterButton by={1} incrementMethod={this.increment} decrementMethod={this.decrement} />\n                <CounterButton by={5} incrementMethod={this.increment} decrementMethod={this.decrement} />\n                <CounterButton by={10} incrementMethod={this.increment} decrementMethod={this.decrement} />\n                <span className = \"count\">{this.state.counter}</span>\n                <div><button className = \"reset\" onClick = {this.reset}>Reset</button></div>\n            </div>\n        );\n    }\n\n    // reset button\n    reset() {\n        console.log(\"reset\");\n        this.setState(\n            () => {\n            return {counter: 0} \n            }\n        );\n    }\n\n    // Function increment (by from child)\n    // increment = () => {  using arrow function removes need to do binding. But we will stick to using binding for now\n    increment(by) {\n        console.log(`increment from parent - ${by}`); // template literal - embedded expressions inside string literal\n        this.setState(\n            (prevState) => { // referencing previous state\n            return {counter: prevState.counter + by} // incrementing it, and returning\n            }\n        );\n    }\n\n    // Function decrement (by from child)\n    decrement(by) {\n        console.log(`decrement from parent - ${by}`); // template literal - embedded expressions inside string literal\n        this.setState(\n            (prevState) => { // referencing previous state\n            return {counter: prevState.counter - by} // decrementing it, and returning\n            }\n        );\n    }\n}\n\n// Defining CounterButton, child of Counter\nclass CounterButton extends Component {\n\n    constructor() {        \n        super(); // Call super before this. No implicit super call in JS.\n\n        // // bind increment/decrement function to the object\n        // this.increment = this.increment.bind(this);\n        // this.decrement = this.decrement.bind(this);\n    }\n\n    // Render button with digit of increment and c\n    render() {\n        return (\n            <div className=\"counter\">\n                <button onClick={() => this.props.incrementMethod(this.props.by)}>+{this.props.by}</button>\n                <button onClick={() => this.props.decrementMethod(this.props.by)}>-{this.props.by}</button>\n            </div>\n        );\n    }\n\n    // // Update state => Counter ++\n    // increment() {\n    //     // Call parent method with by.\n    //     this.props.incrementMethod(this.props.by);\n    // }\n\n    // // Update state => Counter --\n    // decrement() {\n    //     // Call parent method with by.\n    //     this.props.decrementMethod(this.props.by);\n    // }\n}\n\nCounterButton.defaultProps = { // default value for properties\n    by: 1\n}\n\nCounterButton.propTypes = { // type constraints - to throw error\n    by: PropTypes.number\n}\n\n// export entire class out\nexport default Counter;"]},"metadata":{},"sourceType":"module"}