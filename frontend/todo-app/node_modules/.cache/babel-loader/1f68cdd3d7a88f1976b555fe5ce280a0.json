{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx\";\n// import react\nimport React, { Component } from 'react'; // import routing features\n\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'; // auth service\n\nimport AuthenticationService from './AuthenticationService.js'; // auth route, make sure route is valid for user\n\nimport AuthenticatedRoute from './AuthenticatedRoute'; // import refactored components\n\nimport LoginComponent from './LoginComponent.jsx';\nimport ListTodosComponent from './ListTodosComponent.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  // root component of TodoApp\n  // using react router dom dependency to route pages\n  // default route (invalid page to ErrorComponent)\n  // switch emsures only one of the path is launched (else pages will be merged)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/logout\",\n            component: LogoutComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/welcome/:name\",\n            component: WelcomeComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/todos\",\n            component: ListTodosComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: ErrorComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LogoutComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You are logged out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: \"Thank you for using the application.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction ErrorComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error occured. Contact the site admin.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n} // // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\n_c = ErrorComponent;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorComponent\");","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","AuthenticationService","AuthenticatedRoute","LoginComponent","ListTodosComponent","TodoApp","render","LogoutComponent","WelcomeComponent","ErrorComponent"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D,C,CACA;;AACA,OAAOC,qBAAP,MAAkC,4BAAlC,C,CACA;;AACA,OAAOC,kBAAP,MAA+B,sBAA/B,C,CAEA;;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,kBAAP,MAA+B,0BAA/B;;;AAGA,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAE5B;AACA;AACA;AACA;AACAW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,MAAD;AAAA,gCACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAEH;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEA;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAC,SAAzB;AAAmC,YAAA,SAAS,EAAEI;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAC,gBAAzB;AAA0C,YAAA,SAAS,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI,QAAC,kBAAD;AAAoB,YAAA,IAAI,EAAC,QAAzB;AAAkC,YAAA,SAAS,EAAEJ;AAA7C;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEK;AAAlB;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAvB2B;;AA+BhC,MAAMF,eAAN,SAA8BZ,SAA9B,CAAwC;AACpCW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAVmC;;AAiBxC,SAASG,cAAT,GAA0B;AACtB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;KAVSA,c;AAaT,eAAeJ,OAAf","sourcesContent":["// import react\nimport React, { Component } from 'react'\n// import routing features\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\n// auth service\nimport AuthenticationService from './AuthenticationService.js'\n// auth route, make sure route is valid for user\nimport AuthenticatedRoute from './AuthenticatedRoute'\n\n// import refactored components\nimport LoginComponent from './LoginComponent.jsx'\nimport ListTodosComponent from './ListTodosComponent.jsx'\n\n\nclass TodoApp extends Component {\n\n    // root component of TodoApp\n    // using react router dom dependency to route pages\n    // default route (invalid page to ErrorComponent)\n    // switch emsures only one of the path is launched (else pages will be merged)\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <HeaderComponent />\n                    <Switch>\n                        <Route path=\"/\" exact component={LoginComponent} />\n                        <Route path=\"/login\" component={LoginComponent} />\n                        <AuthenticatedRoute path=\"/logout\" component={LogoutComponent} />\n                        <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent} />\n                        <AuthenticatedRoute path=\"/todos\" component={ListTodosComponent} />\n                        <Route component={ErrorComponent} />\n                    </Switch>\n                    <FooterComponent />\n                </Router>\n            </div>\n        )\n    }\n}\n\n\n\n\n\n\nclass LogoutComponent extends Component {\n    render() {\n        return (\n            <div>\n                <h1>You are logged out</h1>\n                <div className=\"container\">\n                    Thank you for using the application.\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\n\nfunction ErrorComponent() {\n    return <div>An error occured. Contact the site admin.</div>\n}\n\n// // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}