{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  // Using react router dom dependency to route pages\n  // default route (invalid page to ErrorComponent)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: LoginComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: LoginComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/welcome\",\n          component: WelcomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: true,\n          component: ErrorComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Log In\n\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // JS method call don't have ;\n\n    this.state = {\n      // initial state in JSON\n      username: '',\n      password: '',\n      hasLoginFailed: false // boolean 1\n\n    }; // handle events\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // pull name from event and change that in the state to the new value fro the event\n      // square bracket to tell JS you are handling a variable instead of constant\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  } // on login click, update state variables\n\n\n  loginClicked() {\n    if (this.state.username === 'username' && this.state.password === 'password') {\n      // 3 ===\n      this.props.history.push(\"/welcome\");\n    } else {\n      this.setState({\n        hasLoginFailed: true\n      }); // login has failed\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Instead of using validation functions, do a simple JS boolean\n      // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n      _jsxDEV(\"div\", {\n        children: [\"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 28\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n} // Welcome page\n\n\nclass WelcomeComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nfunction ErrorComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error occured. Contact the site admin.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 12\n  }, this);\n} // // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\n_c = ErrorComponent;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorComponent\");","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","TodoApp","render","LoginComponent","WelcomeComponent","ErrorComponent","constructor","props","state","username","password","hasLoginFailed","handleChange","bind","loginClicked","event","setState","target","name","value","console","log","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nclass TodoApp extends Component {\n\n    // Using react router dom dependency to route pages\n    // default route (invalid page to ErrorComponent)\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <Route path = \"/\" exact component = {LoginComponent}/>\n                    <Route path = \"/login\" component = {LoginComponent}/>\n                    <Route path = \"/welcome\" component = {WelcomeComponent}/>\n                    <Route path component = {ErrorComponent}/>\n                </Router>\n                {/*<LoginComponent/>*/}\n                {/*<WelcomeComponent/>*/}\n            </div>\n        )\n    }\n}\n\n// Log In\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props) // JS method call don't have ;\n        this.state = { // initial state in JSON\n            username: '',\n            password: '',\n            hasLoginFailed: false, // boolean 1\n        }\n        // handle events\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                // pull name from event and change that in the state to the new value fro the event\n                // square bracket to tell JS you are handling a variable instead of constant\n                [event.target.name]: event.target.value\n            }\n        );\n        console.log(this.state)\n    }\n\n    // on login click, update state variables\n    loginClicked() {\n        if (this.state.username === 'username' && this.state.password === 'password') { // 3 ===\n            this.props.history.push(\"/welcome\");\n        }\n        else {\n            this.setState({ hasLoginFailed: true }) // login has failed\n        }\n    }\n\n    render() {\n        return (\n            // Instead of using validation functions, do a simple JS boolean\n            // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n            <div>\n                {/*<ShowInvalidCredentials hasLoginFailed = {this.state.hasLoginFailed}/>*/}\n                User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                <button onClick={this.loginClicked}>Login</button>\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n            </div>\n        )\n    }\n}\n\n// Welcome page\nclass WelcomeComponent extends Component {\n    render() {\n        return <div>Welcome User</div>\n    }\n}\n\nfunction ErrorComponent() {\n    return <div>An error occured. Contact the site admin.</div>\n}\n\n// // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}