{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js'; // Log In\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // State - contains the username, password, and hasLoginFailed boolean fields.\n\n    this.state = {\n      username: 'username',\n      password: 'password',\n      hasLoginFailed: false // boolean 1\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  } // handle change in a field (manual way)\n\n\n  handleChange(event) {\n    this.setState({\n      // pull name from event and change that in the state to the new value from the event\n      // square bracket to tell JS you are handling a variable instead of constant\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  } // On login click, update state variables. \n  // If successful, use authenticationService to register the log in ad redirect to the welcone page for that user\n  // Else, set login failed to true to display alert\n\n\n  loginClicked() {\n    if (this.state.username === 'username' && this.state.password === 'password') {\n      // 3 ===\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    } else {\n      this.setState({\n        hasLoginFailed: true\n      });\n    }\n\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(() => {}).catch();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n      // If login is failed (reflected in state), display alert.\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [\"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 32\n          }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.loginClicked,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: \"Invalid Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","handleChange","bind","loginClicked","event","setState","target","name","value","console","log","registerSuccessfulLogin","history","push","executeBasicAuthenticationService","then","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,qBAAP,MAAkC,4BAAlC,C,CAEA;;;;AACA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAEnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,UADD;AAETC,MAAAA,QAAQ,EAAE,UAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP,CAGc;;AAHd,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH,GAbkC,CAgBnC;;;AACAD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CACI;AACI;AACA;AACA,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAHtC,KADJ;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACH,GA1BkC,CA4BnC;AACA;AACA;;;AACAM,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKN,KAAL,CAAWC,QAAX,KAAwB,UAAxB,IAAsC,KAAKD,KAAL,CAAWE,QAAX,KAAwB,UAAlE,EAA8E;AAAE;AAC5EN,MAAAA,qBAAqB,CAACkB,uBAAtB,CAA8C,KAAKd,KAAL,CAAWC,QAAzD,EAAmE,KAAKD,KAAL,CAAWE,QAA9E;AACA,WAAKH,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKhB,KAAL,CAAWC,QAAS,EAAxD;AACH,KAHD,MAIK;AACD,WAAKO,QAAL,CAAc;AAAEL,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH;;AAEDP,IAAAA,qBAAqB,CACpBqB,iCADD,CACmC,KAAKjB,KAAL,CAAWC,QAD9C,EACwD,KAAKD,KAAL,CAAWE,QADnE,EAECgB,IAFD,CAGI,MAAM,CAEL,CALL,EAOEC,KAPF;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AACA;AACA;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iDACe;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,UAAxB;AAAmC,YAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,QAArD;AAA+D,YAAA,QAAQ,EAAE,KAAKG;AAA9E;AAAA;AAAA;AAAA;AAAA,kBADf,6BAEc;AAAO,YAAA,IAAI,EAAC,UAAZ;AAAuB,YAAA,IAAI,EAAC,UAA5B;AAAuC,YAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,QAAzD;AAAmE,YAAA,QAAQ,EAAE,KAAKE;AAAlF;AAAA;AAAA;AAAA;AAAA,kBAFd,eAGI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAIK,KAAKN,KAAL,CAAWG,cAAX,iBAA6B;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAaH;;AAlEkC;;AAqEvC,eAAeN,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\n// Log In\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        // State - contains the username, password, and hasLoginFailed boolean fields.\n        this.state = {\n            username: 'username',\n            password: 'password',\n            hasLoginFailed: false, // boolean 1\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n\n    // handle change in a field (manual way)\n    handleChange(event) {\n        this.setState(\n            {\n                // pull name from event and change that in the state to the new value from the event\n                // square bracket to tell JS you are handling a variable instead of constant\n                [event.target.name]: event.target.value\n            }\n        );\n        console.log(this.state)\n    }\n\n    // On login click, update state variables. \n    // If successful, use authenticationService to register the log in ad redirect to the welcone page for that user\n    // Else, set login failed to true to display alert\n    loginClicked() {\n        if (this.state.username === 'username' && this.state.password === 'password') { // 3 ===\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n            this.props.history.push(`/welcome/${this.state.username}`);\n        }\n        else {\n            this.setState({ hasLoginFailed: true })\n        }\n\n        AuthenticationService\n        .executeBasicAuthenticationService(this.state.username, this.state.password)\n        .then(\n            () => {\n                \n            }\n\n        ).catch(\n\n        )\n    }\n\n    render() {\n        return (\n            // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n            // If login is failed (reflected in state), display alert.\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}