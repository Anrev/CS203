{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(LoginComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // JS method call don't have ;\n\n    this.state = {\n      // initial state in JSON\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(\"[username: \" + this.state.username + \"]  [password: \" + this.state.password + \"]\");\n    this.setState({\n      // pull name from event and change that in the state to the new value fro the event\n      // square bracket to tell JS you are handling a variable instead of constant\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    if (username === 'username' && password === 'password') {\n      // 3 ===\n      this.setState({\n        showSuccessMessage: true\n      });\n      this.setState({\n        loginHasFailed: false\n      });\n    } else this.setState({\n      loginHasFailed: true\n    });\n\n    this.setState({\n      showSuccessMessage: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"INVALID LOGIN!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOGIN SUCCESS!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 28\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.LoginClicked,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","TodoApp","render","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","console","log","setState","target","name","value","loginHasFailed","LoginClicked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAP2B;;AAUhC,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAEnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CACF;;AACb,SAAKC,KAAL,GAAa;AAAE;AACXC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,kBAAkB,EAAE;AAJX,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAKV,KAAL,CAAWC,QAA3B,GAAsC,gBAAtC,GAAyD,KAAKD,KAAL,CAAWE,QAApE,GAA+E,GAA3F;AACA,SAAKS,QAAL,CACI;AACI;AACA;AACA,OAACH,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AAHtC,KADJ;AAOH;;AAEDP,EAAAA,YAAY,GAAG;AACX,QAAGN,QAAQ,KAAK,UAAb,IAA2BC,QAAQ,KAAK,UAA3C,EAAuD;AAAE;AACrD,WAAKS,QAAL,CAAc;AAACP,QAAAA,kBAAkB,EAAE;AAArB,OAAd;AACA,WAAKO,QAAL,CAAc;AAACI,QAAAA,cAAc,EAAE;AAAjB,OAAd;AACH,KAHD,MAII,KAAKJ,QAAL,CAAc;AAACI,MAAAA,cAAc,EAAE;AAAjB,KAAd;;AACA,SAAKJ,QAAL,CAAc;AAACP,MAAAA,kBAAkB,EAAE;AAArB,KAAd;AACP;;AAEDR,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,8BAGe;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,QAArD;AAA+D,QAAA,QAAQ,EAAE,KAAKI;AAA9E;AAAA;AAAA;AAAA;AAAA,cAHf,6BAIc;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,QAAA,QAAQ,EAAE,KAAKG;AAAlF;AAAA;AAAA;AAAA;AAAA,cAJd,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKW,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA5CkC;;AA+CvC,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass TodoApp extends Component {\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <LoginComponent></LoginComponent>\n            </div>\n        )\n    }\n}\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props) // JS method call don't have ;\n        this.state = { // initial state in JSON\n            username: '',\n            password: '',\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        console.log(\"[username: \" + this.state.username + \"]  [password: \" + this.state.password + \"]\");\n        this.setState(\n            {\n                // pull name from event and change that in the state to the new value fro the event\n                // square bracket to tell JS you are handling a variable instead of constant\n                [event.target.name]: event.target.value\n            }\n        );\n    }\n\n    loginClicked() {\n        if(username === 'username' && password === 'password') { // 3 ===\n            this.setState({showSuccessMessage: true})\n            this.setState({loginHasFailed: false})\n        }else\n            this.setState({loginHasFailed: true})\n            this.setState({showSuccessMessage: false})\n    }\n\n    render() {\n        return (\n            <div>\n                <div>INVALID LOGIN!</div>\n                <div>LOGIN SUCCESS!</div>\n                User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                <button onClick={this.LoginClicked}>Login</button>\n            </div>\n        )\n    }\n}\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}