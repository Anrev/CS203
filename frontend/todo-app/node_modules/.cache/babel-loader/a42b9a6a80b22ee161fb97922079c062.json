{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from './AuthenticationService.js';\nimport moment from 'moment'; // Display a list of all Todos\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      message: null\n    };\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n  } // bring todos from axios get into current state for display, after initial render has been triggered.\n\n\n  componentDidMount() {\n    this.refreshTodos();\n  } // same as above, but for subsequent refreshes\n\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUserName;\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      this.setState({\n        todos: response.data\n      }); // console.log(response)\n    });\n  } // handler for when delete todo is clicked\n\n\n  deleteTodoClicked(id) {\n    let username = AuthenticationService.getLoggedInUserName(); // console.log(id + \" \" + username);\n\n    TodoDataService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: `Delete of todo ${id} was successful`\n      });\n      this.refreshTodos();\n    });\n  } // handler for when update todo is clicked\n\n\n  updateTodoClicked(id) {\n    // go to\n    this.props.history.push(`/todos/${id}`);\n  }\n\n  addTodoClicked() {\n    // -1 as id, to add todo insteaad of update todo\n    this.props.history.push(\"/todos/-1\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Is Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: // script that for each todo, map it and display id and desc\n            this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: moment(todo.targetDate).format('YYYY-MM-DD')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => this.updateTodoClicked(todo.id),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-warning\",\n                  onClick: () => this.deleteTodoClicked(todo.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: () => this.addTodoClicked(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","ListTodosComponent","constructor","props","state","todos","message","updateTodoClicked","bind","deleteTodoClicked","addTodoClicked","refreshTodos","componentDidMount","username","getLoggedInUserName","retrieveAllTodos","then","response","setState","data","id","deleteTodo","history","push","render","map","todo","description","done","toString","targetDate","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from './AuthenticationService.js'\nimport moment from 'moment'\n\n// Display a list of all Todos\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            todos: [],\n            message: null\n        }\n        this.updateTodoClicked = this.updateTodoClicked.bind(this);\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n        this.addTodoClicked = this.addTodoClicked.bind(this);\n        this.refreshTodos = this.refreshTodos.bind(this);\n    }\n\n\n    // bring todos from axios get into current state for display, after initial render has been triggered.\n    componentDidMount() {\n        this.refreshTodos();\n    }\n\n    // same as above, but for subsequent refreshes\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName\n        TodoDataService.retrieveAllTodos(username)\n            .then(\n                response => {\n                    this.setState({ todos: response.data })\n                    // console.log(response)\n                }\n            )\n    }\n\n    // handler for when delete todo is clicked\n    deleteTodoClicked(id) {\n        let username = AuthenticationService.getLoggedInUserName();\n        // console.log(id + \" \" + username);\n        TodoDataService.deleteTodo(username, id)\n            .then(\n                response => {\n                    this.setState({ message: `Delete of todo ${id} was successful` });\n                    this.refreshTodos();\n                }\n            )\n    }\n\n    // handler for when update todo is clicked\n    updateTodoClicked(id) {\n        // go to\n        this.props.history.push(`/todos/${id}`);\n    }\n\n    addTodoClicked() {\n        // -1 as id, to add todo insteaad of update todo\n        this.props.history.push(\"/todos/-1\");\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>List of Todos</h1>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Is Completed</th>\n                                <th>Target Date</th>\n                                <th>Update</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                // script that for each todo, map it and display id and desc\n                                this.state.todos.map(\n                                    todo =>\n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{todo.done.toString()}</td>\n                                            <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\n                                            <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\n                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                    <div className = \"row\">\n                        <button className = \"btn btn-success\" onClick={() => this.addTodoClicked()}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListTodosComponent;"]},"metadata":{},"sourceType":"module"}