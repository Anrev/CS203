{"ast":null,"code":"import axios from 'axios';\nimport { PA_API_URL } from '../../Constants'; // API to facilitate sending HTTP requests to the backend via the Axios dependency\n// Uses JPA_API_URL to use JPA database instead of the hardcoded service.\n\nclass TodoDataService {\n  retrieveAllTodos(name) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos`);\n  }\n\n  retrieveTodo(name, id) {\n    return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  deleteTodo(name, id) {\n    return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`);\n  }\n\n  updateTodo(name, id, todo) {\n    return axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo);\n  }\n\n  createTodo(name, todo) {\n    return axios.post(`${JPA_API_URL}/users/${name}/todos`);\n  }\n\n}\n\nexport default new TodoDataService();","map":{"version":3,"sources":["/Users/anrev/Desktop/CS203 Anrev/frontend/todo-app/src/api/todo/TodoDataService.js"],"names":["axios","PA_API_URL","TodoDataService","retrieveAllTodos","name","get","JPA_API_URL","retrieveTodo","id","deleteTodo","delete","updateTodo","todo","put","createTodo","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAA0B,iBAA1B,C,CAEA;AACA;;AAEA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,WAAOJ,KAAK,CAACK,GAAN,CAAW,GAAEC,WAAY,UAASF,IAAK,QAAvC,CAAP;AACH;;AAEDG,EAAAA,YAAY,CAACH,IAAD,EAAOI,EAAP,EAAW;AACnB,WAAOR,KAAK,CAACK,GAAN,CAAW,GAAEC,WAAY,UAASF,IAAK,UAASI,EAAG,EAAnD,CAAP;AACH;;AAEDC,EAAAA,UAAU,CAACL,IAAD,EAAOI,EAAP,EAAW;AACjB,WAAOR,KAAK,CAACU,MAAN,CAAc,GAAEJ,WAAY,UAASF,IAAK,UAASI,EAAG,EAAtD,CAAP;AACH;;AAEDG,EAAAA,UAAU,CAACP,IAAD,EAAOI,EAAP,EAAWI,IAAX,EAAiB;AACvB,WAAOZ,KAAK,CAACa,GAAN,CAAW,GAAEP,WAAY,UAASF,IAAK,UAASI,EAAG,EAAnD,EAAsDI,IAAtD,CAAP;AACH;;AAGDE,EAAAA,UAAU,CAACV,IAAD,EAAOQ,IAAP,EAAa;AACnB,WAAOZ,KAAK,CAACe,IAAN,CAAY,GAAET,WAAY,UAASF,IAAK,QAAxC,CAAP;AACH;;AApBiB;;AAwBtB,eAAe,IAAIF,eAAJ,EAAf","sourcesContent":["import axios from 'axios'\nimport {PA_API_URL } from '../../Constants';\n\n// API to facilitate sending HTTP requests to the backend via the Axios dependency\n// Uses JPA_API_URL to use JPA database instead of the hardcoded service.\n\nclass TodoDataService {\n    retrieveAllTodos(name) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos`);\n    }\n\n    retrieveTodo(name, id) {\n        return axios.get(`${JPA_API_URL}/users/${name}/todos/${id}`);\n    }\n\n    deleteTodo(name, id) {\n        return axios.delete(`${JPA_API_URL}/users/${name}/todos/${id}`);\n    }\n\n    updateTodo(name, id, todo) {\n        return axios.put(`${JPA_API_URL}/users/${name}/todos/${id}`, todo);\n    }\n\n\n    createTodo(name, todo) {\n        return axios.post(`${JPA_API_URL}/users/${name}/todos`);\n    }\n\n}\n\nexport default new TodoDataService()"]},"metadata":{},"sourceType":"module"}