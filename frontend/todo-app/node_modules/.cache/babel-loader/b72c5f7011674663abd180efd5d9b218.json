{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/CS203 Anrev/frontend/todo-app/src/Components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport { Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'; // Log In\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // State - contains the username, password, and hasLoginFailed boolean fields.\n\n    this.state = {\n      username: 'username',\n      password: 'password',\n      hasLoginFailed: false // boolean 1\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  } // handle change in a field (manual way)\n\n\n  handleChange(event) {\n    this.setState({\n      // pull name from event and change that in the state to the new value from the event\n      // square bracket to tell JS you are handling a variable instead of constant\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  } // On login click, execute Basic Auth Service to ensure user and pass match with the backend.\n  // If successful, use authenticationService to register the log in ad redirect to the welcone page for that user\n  // Else, set login failed to true to display alert\n\n\n  loginClicked() {\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    }).catch(() => {\n      this.setState({\n        hasLoginFailed: true\n      });\n    }); // BASIC AUTH (old)\n    // AuthenticationService\n    //     .executeBasicAuthenticationService(this.state.username, this.state.password)\n    //     .then(() => {\n    //             AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n    //             this.props.history.push(`/welcome/${this.state.username}`);\n    //     })\n    //     .catch(() => {\n    //         this.setState({ hasLoginFailed: true })\n    //     })\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n      // If login is failed (reflected in state), display alert.\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row row align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-sm\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: \"https://getthematic.com/insights/content/images/wordpress/2019/01/shutterstock_1112175710-1.jpg\",\n                fluid: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md\",\n              children: [\"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                value: this.state.username,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 36\n              }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success\",\n                onClick: this.loginClicked,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning\",\n                children: \"Invalid Credentials\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), \"d\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/anrev/Desktop/CS203 Anrev/frontend/todo-app/src/Components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","Image","Link","LoginComponent","constructor","props","state","username","password","hasLoginFailed","handleChange","bind","loginClicked","event","setState","target","name","value","console","log","executeJwtAuthenticationService","then","response","registerSuccessfulLoginForJwt","data","token","history","push","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;;;AACA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAEnCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,UADD;AAETC,MAAAA,QAAQ,EAAE,UAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP,CAGc;;AAHd,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH,GAbkC,CAenC;;;AACAD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CACI;AACI;AACA;AACA,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAHtC,KADJ;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAjB;AACH,GAzBkC,CA2BnC;AACA;AACA;;;AACAM,EAAAA,YAAY,GAAG;AAEXZ,IAAAA,qBAAqB,CAChBoB,+BADL,CACqC,KAAKd,KAAL,CAAWC,QADhD,EAC0D,KAAKD,KAAL,CAAWE,QADrE,EAEKa,IAFL,CAEWC,QAAD,IAAc;AAChBtB,MAAAA,qBAAqB,CAACuB,6BAAtB,CAAoD,KAAKjB,KAAL,CAAWC,QAA/D,EAAyEe,QAAQ,CAACE,IAAT,CAAcC,KAAvF;AACA,WAAKpB,KAAL,CAAWqB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKrB,KAAL,CAAWC,QAAS,EAAxD;AACH,KALL,EAMKqB,KANL,CAMW,MAAM;AACT,WAAKd,QAAL,CAAc;AAAEL,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KARL,EAFW,CAYX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDoB,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AACA;AACA;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qCACI,QAAC,KAAD;AAAO,gBAAA,GAAG,EAAC,iGAAX;AAA6G,gBAAA,KAAK;AAAlH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,qDACW;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,UAAxB;AAAmC,gBAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,QAArD;AAA+D,gBAAA,QAAQ,EAAE,KAAKG;AAA9E;AAAA;AAAA;AAAA;AAAA,sBADX,6BAEU;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,IAAI,EAAC,UAA5B;AAAuC,gBAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,QAAzD;AAAmE,gBAAA,QAAQ,EAAE,KAAKE;AAAlF;AAAA;AAAA;AAAA;AAAA,sBAFV,eAGA;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAoC,gBAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA,EAIC,KAAKN,KAAL,CAAWG,cAAX,iBAA6B;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAqBH;;AA5EkC;;AA+EvC,eAAeN,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\nimport { Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// Log In\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        // State - contains the username, password, and hasLoginFailed boolean fields.\n        this.state = {\n            username: 'username',\n            password: 'password',\n            hasLoginFailed: false, // boolean 1\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    // handle change in a field (manual way)\n    handleChange(event) {\n        this.setState(\n            {\n                // pull name from event and change that in the state to the new value from the event\n                // square bracket to tell JS you are handling a variable instead of constant\n                [event.target.name]: event.target.value\n            }\n        );\n        console.log(this.state)\n    }\n\n    // On login click, execute Basic Auth Service to ensure user and pass match with the backend.\n    // If successful, use authenticationService to register the log in ad redirect to the welcone page for that user\n    // Else, set login failed to true to display alert\n    loginClicked() {\n\n        AuthenticationService\n            .executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then((response) => {\n                AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token);\n                this.props.history.push(`/welcome/${this.state.username}`);\n            })\n            .catch(() => {\n                this.setState({ hasLoginFailed: true })\n            })\n\n        // BASIC AUTH (old)\n        // AuthenticationService\n        //     .executeBasicAuthenticationService(this.state.username, this.state.password)\n        //     .then(() => {\n        //             AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n        //             this.props.history.push(`/welcome/${this.state.username}`);\n        //     })\n        //     .catch(() => {\n        //         this.setState({ hasLoginFailed: true })\n        //     })\n    }\n\n    render() {\n        return (\n            // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n            // If login is failed (reflected in state), display alert.\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    <div className=\"row row align-items-center\">\n                        <div className=\"col-sm\">\n                            <Image src=\"https://getthematic.com/insights/content/images/wordpress/2019/01/shutterstock_1112175710-1.jpg\" fluid />\n                        </div>\n                        <div className=\"col-md\">\n                        User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                        Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                        <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                        {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                        </div>d\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default LoginComponent;\n\n\n"]},"metadata":{},"sourceType":"module"}