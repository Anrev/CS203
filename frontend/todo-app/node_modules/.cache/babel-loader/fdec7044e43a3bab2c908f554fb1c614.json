{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, L } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  // root component of TodoApp\n  // using react router dom dependency to route pages\n  // default route (invalid page to ErrorComponent)\n  // switch emsures only one of the path is launched (else pages will be merged)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/welcome/:name\",\n            component: WelcomeComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todos\",\n            component: ListTodosComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: ErrorComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Log In\n\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // JS method call don't have ;\n\n    this.state = {\n      // initial state in JSON\n      username: '',\n      password: '',\n      hasLoginFailed: false // boolean 1\n\n    }; // handle events\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // pull name from event and change that in the state to the new value fro the event\n      // square bracket to tell JS you are handling a variable instead of constant\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  } // on login click, update state variables\n\n\n  loginClicked() {\n    if (this.state.username === 'username' && this.state.password === 'password') {\n      // 3 ===\n      this.props.history.push(`/welcome/${this.state.username}`);\n    } else {\n      this.setState({\n        hasLoginFailed: true\n      }); // login has failed\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Instead of using validation functions, do a simple JS boolean\n      // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n      _jsxDEV(\"div\", {\n        children: [\"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 28\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n} // Display Todos\n\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [{\n        id: 1,\n        description: \"learn react\"\n      }, {\n        id: 2,\n        description: \"learn spring\"\n      }, {\n        id: 3,\n        description: \"learn git\"\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: // script that for each todo, map it and display id and desc\n          this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Welcome page\n\n\nclass WelcomeComponent extends Component {\n  render() {\n    // Welcome, name fetched from component call inside router (:name)\n    // No a href on link, this is single page app and we do not want to refresh\n    // Use Link to\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Welcome \", this.props.match.params.name, \". You can manage your todos \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/todos\",\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 87\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nfunction ErrorComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error occured. Contact the site admin.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 12\n  }, this);\n} // // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\n_c = ErrorComponent;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorComponent\");","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","L","TodoApp","render","LoginComponent","WelcomeComponent","ListTodosComponent","ErrorComponent","constructor","props","state","username","password","hasLoginFailed","handleChange","bind","loginClicked","event","setState","target","name","value","console","log","history","push","todos","id","description","map","todo","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch, L } from 'react-router-dom'\n\nclass TodoApp extends Component {\n\n    // root component of TodoApp\n    // using react router dom dependency to route pages\n    // default route (invalid page to ErrorComponent)\n    // switch emsures only one of the path is launched (else pages will be merged)\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <Switch>\n                        <Route path=\"/\" exact component={LoginComponent} />\n                        <Route path=\"/login\" component={LoginComponent} />\n                        <Route path=\"/welcome/:name\" component={WelcomeComponent} />\n                        <Route path=\"/todos\" component={ListTodosComponent} />\n                        <Route component={ErrorComponent} />\n                    </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\n// Log In\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props) // JS method call don't have ;\n        this.state = { // initial state in JSON\n            username: '',\n            password: '',\n            hasLoginFailed: false, // boolean 1\n        }\n        // handle events\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                // pull name from event and change that in the state to the new value fro the event\n                // square bracket to tell JS you are handling a variable instead of constant\n                [event.target.name]: event.target.value\n            }\n        );\n        console.log(this.state)\n    }\n\n    // on login click, update state variables\n    loginClicked() {\n        if (this.state.username === 'username' && this.state.password === 'password') { // 3 ===\n            this.props.history.push(`/welcome/${this.state.username}`);\n        }\n        else {\n            this.setState({ hasLoginFailed: true }) // login has failed\n        }\n    }\n\n    render() {\n        return (\n            // Instead of using validation functions, do a simple JS boolean\n            // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n            <div>\n                {/*<ShowInvalidCredentials hasLoginFailed = {this.state.hasLoginFailed}/>*/}\n                User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                <button onClick={this.loginClicked}>Login</button>\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n            </div>\n        )\n    }\n}\n\n// Display Todos\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            todos:\n                [\n                    { id: 1, description: \"learn react\" },\n                    { id: 2, description: \"learn spring\" },\n                    { id: 3, description: \"learn git\" }\n                ]\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>List of Todos</h1>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>description</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            // script that for each todo, map it and display id and desc\n                            this.state.todos.map (\n                                todo =>\n                                    <tr>\n                                        <td>{todo.id}</td>\n                                        <td>{todo.description}</td>\n                                    </tr>\n                            )\n                        }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\n// Welcome page\nclass WelcomeComponent extends Component {\n    render() {\n        // Welcome, name fetched from component call inside router (:name)\n        // No a href on link, this is single page app and we do not want to refresh\n        // Use Link to\n        return <div>Welcome {this.props.match.params.name}. You can manage your todos <Link to = \"/todos\">here</Link></div>\n    }\n}\n\nfunction ErrorComponent() {\n    return <div>An error occured. Contact the site admin.</div>\n}\n\n// // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}