{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx\";\n// import react\nimport React, { Component } from 'react'; // import routing features\n\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'; // auth service\n\nimport AuthenticationService from './AuthenticationService.js'; // auth route, make sure route is valid for user\n\nimport AuthenticatedRoute from './AuthenticatedRoute'; // import refactored components\n\nimport LoginComponent from './LoginComponent.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  // root component of TodoApp\n  // using react router dom dependency to route pages\n  // default route (invalid page to ErrorComponent)\n  // switch emsures only one of the path is launched (else pages will be merged)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/logout\",\n            component: LogoutComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/welcome/:name\",\n            component: WelcomeComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n            path: \"/todos\",\n            component: ListTodosComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: ErrorComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass HeaderComponent extends Component {\n  render() {\n    const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-expand-md navbar-dark bg-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/\",\n            className: \"navbar-brand\",\n            children: \"Home Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: [isUserLoggedIn && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/welcome/user\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 44\n          }, this), isUserLoggedIn && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/todos\",\n              children: \"Todos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav navbar-collapse justify-content-end\",\n          children: [!isUserLoggedIn && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 45\n          }, this), isUserLoggedIn && /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/logout\",\n              onClick: AuthenticationService.logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass FooterComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: \"All Rights Reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LogoutComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You are logged out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: \"Thank you for using the application.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Welcome page\n\n\nclass WelcomeComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\"Welcome \", this.props.match.params.name, \". You can manage your todos \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/todos\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true); // Welcome, name fetched from component call inside router (:name)\n    // No a href on link, this is single page app and we do not want to refresh\n    // Use Link to\n  }\n\n}\n\nfunction ErrorComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error occured. Contact the site admin.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 12\n  }, this);\n} // // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\n_c = ErrorComponent;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorComponent\");","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","AuthenticationService","AuthenticatedRoute","LoginComponent","TodoApp","render","LogoutComponent","WelcomeComponent","ListTodosComponent","ErrorComponent","HeaderComponent","isUserLoggedIn","logout","FooterComponent","props","match","params","name"],"mappings":"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","sourcesContent":["// import react\nimport React, { Component } from 'react'\n// import routing features\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\n// auth service\nimport AuthenticationService from './AuthenticationService.js'\n// auth route, make sure route is valid for user\nimport AuthenticatedRoute from './AuthenticatedRoute'\n\n// import refactored components\nimport LoginComponent from './LoginComponent.jsx'\n\n\n\nclass TodoApp extends Component {\n\n    // root component of TodoApp\n    // using react router dom dependency to route pages\n    // default route (invalid page to ErrorComponent)\n    // switch emsures only one of the path is launched (else pages will be merged)\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <HeaderComponent />\n                    <Switch>\n                        <Route path=\"/\" exact component={LoginComponent} />\n                        <Route path=\"/login\" component={LoginComponent} />\n                        <AuthenticatedRoute path=\"/logout\" component={LogoutComponent} />\n                        <AuthenticatedRoute path=\"/welcome/:name\" component={WelcomeComponent} />\n                        <AuthenticatedRoute path=\"/todos\" component={ListTodosComponent} />\n                        <Route component={ErrorComponent} />\n                    </Switch>\n                    <FooterComponent />\n                </Router>\n            </div>\n        )\n    }\n}\n\n\nclass HeaderComponent extends Component {\n    render() {\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"/\" className=\"navbar-brand\">Home Link</a></div>\n                    <ul className=\"navbar-nav\">\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/welcome/user\">Home</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/todos\">Todos</Link></li>}\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\n                        {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\n\nclass FooterComponent extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <span className=\"text-muted\">All Rights Reserved.</span>\n            </footer>\n        )\n    }\n}\n\nclass LogoutComponent extends Component {\n    render() {\n        return (\n            <div>\n                <h1>You are logged out</h1>\n                <div className=\"container\">\n                    Thank you for using the application.\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// Welcome page\nclass WelcomeComponent extends Component {\n    render() {\n        return (\n            <>\n                <h1>Welcome</h1>\n                <div className=\"container\">\n                    Welcome {this.props.match.params.name}. You can manage your todos <Link to=\"/todos\">here</Link>\n                </div>\n            </>\n        )\n        // Welcome, name fetched from component call inside router (:name)\n        // No a href on link, this is single page app and we do not want to refresh\n        // Use Link to\n    }\n}\n\nfunction ErrorComponent() {\n    return <div>An error occured. Contact the site admin.</div>\n}\n\n// // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}