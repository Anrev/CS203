{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\nimport { BrowserRouterma, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  // Using react router dom dependency to route pages\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          component: LoginComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"\",\n          component: WelcomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // JS method call don't have ;\n\n    this.state = {\n      // initial state in JSON\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      // boolean 1\n      showSuccessMessage: false // boolean 2\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // pull name from event and change that in the state to the new value fro the event\n      // square bracket to tell JS you are handling a variable instead of constant\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  } // on login click, update state variables\n\n\n  loginClicked() {\n    if (this.state.username === 'username' && this.state.password === 'password') {\n      // 3 ===\n      this.setState({\n        showSuccessMessage: true\n      }); // login has succeeded\n\n      this.setState({\n        hasLoginFailed: false\n      });\n    } else {\n      this.setState({\n        hasLoginFailed: true\n      }); // login has failed\n\n      this.setState({\n        showSuccessMessage: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Instead of using validation functions, do a simple JS boolean\n      // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n      _jsxDEV(\"div\", {\n        children: [this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 47\n        }, this), this.state.showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 51\n        }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 28\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nclass WelcomeComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Welcome User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n\n} // // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n// // tell user credentials are valid\n// function ShowSuccessMessage(props) {\n//     if(props.showSuccessMessage) {\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouterma","Route","TodoApp","render","LoginComponent","WelcomeComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","handleChange","bind","loginClicked","event","setState","target","name","value","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {BrowserRouterma, Route} from 'react-router-dom'\n\nclass TodoApp extends Component {\n\n    // Using react router dom dependency to route pages\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <Route path = \"/login\" component = {LoginComponent}/>\n                    <Route path = \"\" component = {WelcomeComponent}/>\n                </Router>\n                {/*<LoginComponent/>*/}\n                {/*<WelcomeComponent/>*/}\n            </div>\n        )\n    }\n}\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props) // JS method call don't have ;\n        this.state = { // initial state in JSON\n            username: '',\n            password: '',\n            hasLoginFailed: false, // boolean 1\n            showSuccessMessage: false // boolean 2\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                // pull name from event and change that in the state to the new value fro the event\n                // square bracket to tell JS you are handling a variable instead of constant\n                [event.target.name]: event.target.value\n            }\n        );\n        console.log(this.state)\n    }\n\n    // on login click, update state variables\n    loginClicked() {\n        if (this.state.username === 'username' && this.state.password === 'password') { // 3 ===\n            this.setState({ showSuccessMessage: true }) // login has succeeded\n            this.setState({ hasLoginFailed: false })\n        }\n        else {\n            this.setState({ hasLoginFailed: true }) // login has failed\n            this.setState({ showSuccessMessage: false })\n        }\n    }\n\n    render() {\n        return (\n            // Instead of using validation functions, do a simple JS boolean\n            // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n            <div>\n                {/*<ShowInvalidCredentials hasLoginFailed = {this.state.hasLoginFailed}/>*/}\n                {/*<ShowSuccessMessage showSuccessMessage = {this.state.showSuccessMessage}/>*/}\n                {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n                {this.state.showSuccessMessage && <div>Login Successful</div>}\n                User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                <button onClick={this.loginClicked}>Login</button>\n            </div>\n        )\n    }\n}\n\nclass WelcomeComponent extends Component {\n    render() {\n        return <div>Welcome User</div>\n    }\n}\n\n// // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n// // tell user credentials are valid\n// function ShowSuccessMessage(props) {\n//     if(props.showSuccessMessage) {\n//         return <div>Login Successful</div>\n//     }\n//     return null\n// }\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}