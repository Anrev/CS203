{"ast":null,"code":"var _jsxFileName = \"/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react'; // import routing features\n\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'; // import feature to refresh header every time router is changed\n\nimport { withRouter } from 'react-router'; // auth service\n\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  // root component of TodoApp\n  // using react router dom dependency to route pages\n  // default route (invalid page to ErrorComponent)\n  // switch emsures only one of the path is launched (else pages will be merged)\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TodoApp\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: LoginComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            component: LogoutComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/welcome/:name\",\n            component: WelcomeComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/todos\",\n            component: ListTodosComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: ErrorComponent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FooterComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Log In\n\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props); // JS method call don't have ;\n\n    this.state = {\n      // initial state in JSON\n      username: 'testUser',\n      password: 'testPass',\n      hasLoginFailed: false // boolean 1\n\n    }; // handle events\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      // pull name from event and change that in the state to the new value from the event\n      // square bracket to tell JS you are handling a variable instead of constant\n      [event.target.name]: event.target.value\n    });\n    console.log(this.state);\n  } // on login click, update state variables\n\n\n  loginClicked() {\n    if (this.state.username === 'testUser' && this.state.password === 'testPass') {\n      // 3 ===\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(`/welcome/${this.state.username}`);\n    } else {\n      this.setState({\n        hasLoginFailed: true\n      }); // login has failed\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // Instead of using validation functions, do a simple JS boolean\n      // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [\"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 32\n          }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.loginClicked,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: \"Invalid Credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nclass HeaderComponent extends Component {\n  render() {\n    const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-expand-md navbar-dark bg-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            className: \"navbar-brand\",\n            children: \"Home Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/welcome/user\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/todos\",\n              children: \"Todos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav navbar-collapse justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"nav-link\",\n              to: \"/logout\",\n              onClick: AuthenticationService.logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass FooterComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: \"All Rights Reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass LogoutComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You are logged out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: \"Thank you for using the application.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Display Todos\n\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [{\n        id: 1,\n        description: \"learn react\",\n        done: false,\n        targetDate: new Date()\n      }, {\n        id: 2,\n        description: \"learn spring\",\n        done: false,\n        targetDate: new Date()\n      }, {\n        id: 3,\n        description: \"learn git\",\n        done: false,\n        targetDate: new Date()\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List of Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"is Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: // script that for each todo, map it and display id and desc\n            this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.done.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.targetDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Welcome page\n\n\nclass WelcomeComponent extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [\"Welcome \", this.props.match.params.name, \". You can manage your todos \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/todos\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true); // Welcome, name fetched from component call inside router (:name)\n    // No a href on link, this is single page app and we do not want to refresh\n    // Use Link to\n  }\n\n}\n\nfunction ErrorComponent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"An error occured. Contact the site admin.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 12\n  }, this);\n} // // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\n_c = ErrorComponent;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ErrorComponent\");","map":{"version":3,"sources":["/Users/anrev/Desktop/School/T3/Collaborative Development/Udemy Course/To-Do Application/frontend/todo-app/src/Components/todo/TodoApp.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Link","withRouter","AuthenticationService","TodoApp","render","LoginComponent","LogoutComponent","WelcomeComponent","ListTodosComponent","ErrorComponent","constructor","props","state","username","password","hasLoginFailed","handleChange","bind","loginClicked","event","setState","target","name","value","console","log","registerSuccessfulLogin","history","push","HeaderComponent","isUserLoggedIn","logout","FooterComponent","todos","id","description","done","targetDate","Date","map","todo","toString","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n// import routing features\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\n// import feature to refresh header every time router is changed\nimport {withRouter} from 'react-router'\n// auth service\nimport AuthenticationService from './AuthenticationService.js'\n\n\nclass TodoApp extends Component {\n\n    // root component of TodoApp\n    // using react router dom dependency to route pages\n    // default route (invalid page to ErrorComponent)\n    // switch emsures only one of the path is launched (else pages will be merged)\n    render() {\n        return (\n            <div className=\"TodoApp\">\n                <Router>\n                    <HeaderComponent />\n                    <Switch>\n                        <Route path=\"/\" exact component={LoginComponent} />\n                        <Route path=\"/login\" component={LoginComponent} />\n                        <Route path=\"/logout\" component={LogoutComponent} />\n                        <Route path=\"/welcome/:name\" component={WelcomeComponent} />\n                        <Route path=\"/todos\" component={ListTodosComponent} />\n                        <Route component={ErrorComponent} />\n                    </Switch>\n                    <FooterComponent />\n                </Router>\n            </div>\n        )\n    }\n}\n\n// Log In\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props) // JS method call don't have ;\n        this.state = { // initial state in JSON\n            username: 'testUser',\n            password: 'testPass',\n            hasLoginFailed: false, // boolean 1\n        }\n        // handle events\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                // pull name from event and change that in the state to the new value from the event\n                // square bracket to tell JS you are handling a variable instead of constant\n                [event.target.name]: event.target.value\n            }\n        );\n        console.log(this.state)\n    }\n\n    // on login click, update state variables\n    loginClicked() {\n        if (this.state.username === 'testUser' && this.state.password === 'testPass') { // 3 ===\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n            this.props.history.push(`/welcome/${this.state.username}`);\n        }\n        else {\n            this.setState({ hasLoginFailed: true }) // login has failed\n        }\n    }\n\n    render() {\n        return (\n            // Instead of using validation functions, do a simple JS boolean\n            // In JavaScript, BOOLEAN && SHOW X means IF BOOLEAN, THEN SHOW X\n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {/*<ShowInvalidCredentials hasLoginFailed = {this.state.hasLoginFailed}/>*/}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass HeaderComponent extends Component {\n    render() {\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n        return (\n            <header>\n                <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n                    <div><a href=\"\" className=\"navbar-brand\">Home Link</a></div>\n                    <ul className=\"navbar-nav\">\n                        {<li><Link className=\"nav-link\" to=\"/welcome/user\">Home</Link></li>}\n                        <li><Link className=\"nav-link\" to=\"/todos\">Todos</Link></li>\n                    </ul>\n                    <ul className=\"navbar-nav navbar-collapse justify-content-end\">\n                        <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>\n                        <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\n\nclass FooterComponent extends Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <span className=\"text-muted\">All Rights Reserved.</span>\n            </footer>\n        )\n    }\n}\n\nclass LogoutComponent extends Component {\n    render() {\n        return (\n            <div>\n                <h1>You are logged out</h1>\n                <div className=\"container\">\n                    Thank you for using the application.\n                </div>\n            </div>\n        );\n    }\n}\n\n// Display Todos\nclass ListTodosComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            todos:\n                [\n                    { id: 1, description: \"learn react\", done: false, targetDate: new Date },\n                    { id: 2, description: \"learn spring\", done: false, targetDate: new Date },\n                    { id: 3, description: \"learn git\", done: false, targetDate: new Date }\n                ]\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>List of Todos</h1>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>description</th>\n                                <th>is Completed</th>\n                                <th>target Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                // script that for each todo, map it and display id and desc\n                                this.state.todos.map\n                                    (\n                                        todo =>\n                                            <tr>\n                                                <td>{todo.description}</td>\n                                                <td>{todo.done.toString()}</td>\n                                                <td>{todo.targetDate.toString()}</td>\n                                            </tr>\n                                    )\n                            } \n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n// Welcome page\nclass WelcomeComponent extends Component {\n    render() {\n        return (\n            <>\n                <h1>Welcome</h1>\n                <div className=\"container\">\n                    Welcome {this.props.match.params.name}. You can manage your todos <Link to=\"/todos\">here</Link>\n                </div>\n            </>\n        )\n        // Welcome, name fetched from component call inside router (:name)\n        // No a href on link, this is single page app and we do not want to refresh\n        // Use Link to\n    }\n}\n\nfunction ErrorComponent() {\n    return <div>An error occured. Contact the site admin.</div>\n}\n\n// // tell user credentials are invalid\n// function ShowInvalidCredentials(props) {\n//     if(props.hasLoginFailed) {\n//         return <div>Invalid Login</div>\n//     }\n//     return null\n// }\n\n\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}